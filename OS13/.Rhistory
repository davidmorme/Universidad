}
R(90)
return(pweibull(t, shape = betaHat, scale = 1/lambdaHat,lower.tail = FALSE))
R=function(t){
return(pweibull(t, shape = betaHat, scale = 1/lambdaHat,lower.tail = FALSE))
}
R(90)
tt=seq(0, 500, 0.5)
rr=sapply(tt, R)
plot(rr)
clear
cls
data=c(0.7,52.7,129.7,187.8,264.4,272.8,304.2,305.1,309.8,310.5)
r=length(data)
n=25
log.likelihood= function(tetha){
beta=tetha[1]
lambda=tetha[2]
l=dweibull(data,beta,1/lambda)
l[(r+1):n]=pweibull(data[r],beta,1/lambda, lower.tail = FALSE)
return(-sum(log(l)))
}
Sol=nlm(f = log.likelihood, p = c(1,1))
Sol #Code debe dar 1 o 2
betaHat=Sol$estimate[1]
lambdaHat=Sol$estimate[2]
Sol=nlm(f = log.likelihood, p = c(1.1,0.05))
Sol #Code debe dar 1 o 2
Sol=nlm(f = log.likelihood, p = c(1.1,0.005))
Sol #Code debe dar 1 o 2
sort(data)
data=c(0.06,0.8,0.3,0.03,1.2,0.7,0.92,0.41,0.23,0.32,1.1,1.9,0.4,1.31,1.2,0.7,14,0.9,0.93,0.27)
sort(data)
data=sort(data)
sum(data>data[i])
sum(data>data)
sum(data>data[0])
data[0]
data[1]
sum(data>data[1])
sum(data>data[1])/length(data)
c(0)+data
R=c(0,data)
t[0]=1
sum(data>t)/length(data)
t=c(0,data)
sum(data>t)/length(data)
data>t
t=c(0,data)
R=rep(0, length(data)+1)
for(i in 1:length(R)){
R[i]=sum(data>t[i])/length(data)
}
plot(R)
plot(R, type = "l")
plot(t,R, type = "l")
t
data=c(0.06,0.8,0.3,0.03,1.2,0.7,0.92,0.41,0.23,0.32,1.1,1.9,0.4,1.31,1.2,0.7,1.4,0.9,0.93,0.27)
data=sort(data)
t=c(0,data)
R=rep(0, length(data)+1)
for(i in 1:length(R)){
R[i]=sum(data>t[i])/length(data)
}
plot(t,R, type = "l")
t
plot(t,R, type = "s")
R
RHat/20
data=c(0.06,0.8,0.3,0.03,1.2,0.7,0.92,0.41,0.23,0.32,1.1,1.9,0.4,1.31,1.2,0.7,1.4,0.9,0.93,0.27)
data=sort(data)
t=c(0,data)
RHat=rep(0, length(data)+1)
for(i in 1:length(R)){
RHat[i]=sum(data>t[i])/length(data)
}
plot(t,RHat, type = "s")
RHat/20
RHat*20
t=c(0,unique(data))
RHat=rep(0, length(data)+1)
for(i in 1:length(R)){
RHat[i]=sum(data>t[i])/length(data)
}
plot(t,RHat, type = "s")
RHat*20
RHat=rep(0, t)
RHat=rep(0, length(t))
for(i in 1:length(R)){
RHat[i]=sum(data>t[i])/length(data)
}
plot(t,RHat, type = "s")
RHat*20
data=c(0.06,0.8,0.3,0.03,1.2,0.7,0.92,0.41,0.23,0.32,1.1,1.9,0.4,1.31,1.2,0.7,1.4,0.9,0.93,0.27)
data=sort(data)
t=c(0,unique(data))
RHat=rep(0, length(t))
for(i in 1:length(R)){
RHat[i]=sum(data>t[i])/length(data)
}
plot(t,RHat, type = "s")
RHat=rep(0, length(t))
for(i in 1:length(RHat)){
RHat[i]=sum(data>t[i])/length(data)
}
plot(t,RHat, type = "s")
RHat*20
set.seed(2022)
data=rexp(1000,rate = 3)
data
# Solution 1
qplot(data = data)
library(ggplot2)
# Solution 1
qplot(data = data)
# Solution 1
qplot(data)
# Solution 1
qqplot(data)
# Solution 1
hist(data)
# Solution 1
hist(data,probability = TRUE)
qqline(data)
qqnorm(data)
qqline(data)
?qqnorm()
qqline(data)
qqnorm(data)
qqline(data, distribution = qexp)
qqexp(data)
qqline(data, distribution = qnorm)
hist(data)
hist(data, density = TRUE)
hist(data, freq = FALSE)
library(MASS)
Hwt
Cats
cats
hist(cats$Hwt, freq = FALSE)
qqnorm(cats$Hwt)
qqline(cats$Hwt, distribution = qnorm)
qqline(cats$Hwt, distribution = qnorm, color='red')
qqline(cats$Hwt, distribution = qnorm, col='red')
qqline(cats$Hwt, distribution = qnorm, col="red")
qqnorm(cats$Hwt)
qqline(cats$Hwt, distribution = qnorm, col="red")
hist(cats$Hwt, freq = FALSE, bins=30)
hist(cats$Hwt, freq = FALSE, bin=30)
hist(cats$Hwt, freq = FALSE,breaks = 30)
?ppoints
qqnorm(data)
qqline(data, distribution = qexp)
qqline(data, distribution = qexp(rate = 3))
qqline(data, distribution = qexp(data,rate = 3))
qexp(data,rate = 3)
pexp(data,rate = 3)
qqline(data, distribution = pexp(data,rate = 3))
qqnorm(cats$Hwt)
qqline(cats$Hwt, distribution = qnorm, col="red")
shapiro.test(cats$Hwt)
library(cars)
library(CAR)
library(car)
qqplot(cats$Hwt)
qqplot(cats$Hwt)
qqPlot(cats$Hwt)
lillie.test(cats$Hwt)
library(lmtest)
lillie.test(cats$Hwt)
library(nortest)
lillie.test(cats$Hwt)
ks.test(cats$Hwt)
?ks.test(cats$Hwt,)
ks.test(cats$Hwt,"pexp",rate=3)
ks.test(data,"pexp",rate=3)
ks.test(cats$Hwt)
ks.test(cats$Hwt,"pnorm",rate=3)
ks.test(cats$Hwt,"pnorm",mu=3)
ks.test(cats$Hwt,"pnorm",mean=3)
ks.test(cats$Hwt,"pnorm")
ks.test(data,"pexp",rate=3)
ks.test(data,"pexp")
ks.test(cats$Hwt,"pnorm", mean=mean(cats$Hwt))
?pnorm
ks.test(cats$Hwt,"pnorm", mean=mean(cats$Hwt), sd=sd(cats$Hwt))
shapiro.test(cats$Hwt)
lillie.test(cats$Hwt)
dataN=rnorm(100,12,3)
shapiro.test(dataN)
ks.test(dataN,"pnorm")
ks.test(dataN,"pnorm", mean=mean(dataN), sd=sd(dataN))
shapiro.test(dataN)
shapiro.test(cats$Hwt)
lillie.test(dataN)
mean(cats$Hwt)
sd(cats$Hwt)
ks.test(cats$Hwt,"pnorm", mean=10, sd=2.5)
ks.test(dataN,"pnorm", mean=mean(dataN), sd=sd(dataN))
shapiro.test(dataN)
lillie.test(dataN)
shapiro.test(cats$Hwt)
lillie.test(cats$Hwt)
ks.test(cats$Hwt,"pnorm", mean=mean(cats$Hwt), sd=sd(cats$Hwt))
qqline(data, distribution = qexp)
qqnorm(data)
qqline(data, distribution = qexp)
ppoints(1)
ppoints(100)
qqnorm(qexp(ppoints(500)),data)
qqnorm(qexp(ppoints(1000)),data)
qqplot(qexp(ppoints(1000)) ,data)
qqline(data, distribution = qexp)
qqplot(qexp(ppoints(100)) ,data)
qqline(data, distribution = qexp)
qqplot(qexp(ppoints(500)) ,data)
qqline(data, distribution = qexp)
qqplot(qexp(ppoints(1000)) ,data)
qqline(data, distribution = qexp)
qqline(data, distribution = qexp, col="red")
qqplot(qexp(ppoints(500),rate = 3) ,data)
qqline(data, distribution = qexp, col="red")
qqline(data, distribution = function(p) qexp(p,rate = 3), col="red")
qqplot(qgamma(ppoints(500), rate = 3, shape = 1) ,data)
qqline(data, distribution = function(p) qgamma(p,rate = 3), col="red")
qqline(data, distribution = function(p) qgamma(p,rate = 3, shape = 1), col="red")
qqnorm(data)
qqline(data)
qqline(data, col="red")
qqplot(qgamma(ppoints(500), rate = 1, shape = 1) ,data)
qqline(data, distribution = function(p) qgamma(p,rate = 1, shape = 1), col="red")
qqplot(qgamma(ppoints(500), rate = 3, shape = 1) ,data)
qqline(data, distribution = function(p) qgamma(p,rate = 3, shape = 1), col="red")
qqplot(qgamma(ppoints(500), rate = 1, shape = 1) ,data)
qqline(data, distribution = function(p) qgamma(p,rate = 1, shape = 1), col="red")
qqPlot(cats$Hwt)
qqplot(qlnorm(ppoints(500), meanlog =  5, sdlog = sqrt(5)) ,data)
qqline(data, distribution = function(p) qlnorm(p,meanlog =  5, sdlog = sqrt(5)), col="red")
ks.test(data,"pexp",rate=3)
ks.test(data,"pgamma",rate=3, shape = 1)
ks.test(data,"plnorm",meanlog =  5, sdlog = sqrt(5))
qqplot(qexp(ppoints(500),rate = 3) ,data)
qqline(data, distribution = function(p) qexp(p,rate = 3), col="red")
ks.test(data,"pexp",rate=3)
qqplot(qgamma(ppoints(500), rate = 3, shape = 1) ,data)
qqline(data, distribution = function(p) qgamma(p,rate = 3, shape = 1), col="red")
ks.test(data,"pgamma",rate=3, shape = 1)
qqplot(qlnorm(ppoints(500), meanlog =  5, sdlog = sqrt(5)) ,data)
qqline(data, distribution = function(p) qlnorm(p,meanlog =  5, sdlog = sqrt(5)), col="red")
ks.test(data,"plnorm",meanlog =  5, sdlog = sqrt(5))
qqline(data, col="red")
qqnorm(data)
qqline(data, col="red")
qqnorm(dataN)
qqline(dataN, col="red")
qqPlot(cats$Hwt)
?qqPlot(cats$Hwt)
qqPlot(data, distribution = "exp")
qqPlot(dataN)
qqPlot(data, distribution = "gamma")
qqPlot(data, distribution = "gamma", shape = 1)
qqPlot(dataN,distribution = "norm", mean = 1)
qqPlot(dataN,distribution = "norm", mean = 12)
qqPlot(data, distribution = "exp")
qqPlot(data, distribution = "exp", rate = 3)
qqPlot(data, distribution = "lnorm", meanlog =  5, sdlog = sqrt(5))
qqPlot(data, distribution = "lnorm")
qqPlot(data, distribution = "lnorm", meanlog =  1, sdlog = sqrt(5))
library(survival, lib.loc = "C:/Program Files/R/R-4.0.5/library")
library(survival)
data=c(420,650,703,838,1086,1125,1378,1673,1896,2037)
n=length(data)
log.likelihood= function(tetha){
beta=tetha[1]
lambda=tetha[2]
l=dweibull(data,beta,1/lambda)
return(-sum(log(l)))
}
log.likelihood(c(1,2))
log.likelihood(c(1,1))
log.likelihood(c(2000,2))
log.likelihood(c(0.0001,2))
Sol=nlminb(f = log.likelihood, p = c(0.0001,2), hessian = TRUE)
?nlminb
Sol=nlminb(c(0.0001,2),f = log.likelihood, hessian = TRUE)
Sol=nlminb(c(0.0001,2),log.likelihood, hessian = TRUE)
Sol #Code debe dar 1 o 2
betaHat=Sol$estimate[1]
lambdaHat=Sol$estimate[2]
betaHat
betaHat=Sol$par[1]
lambdaHat=Sol$par[2]
betaHat
lambdaHat
data3=c(420,650,703,838,1086,1125,1378,1673,1896,2037)
n3=length(data3)
log.likelihood= function(tetha){
beta=tetha[1]
lambda=tetha[2]
l=dweibull(data,beta,1/lambda)
return(-sum(log(l)))
}
log.likelihood(c(0.0001,2))
l=dweibull(data3,beta,1/lambda)
log.likelihood= function(tetha){
beta=tetha[1]
lambda=tetha[2]
l=dweibull(data3,beta,1/lambda)
return(-sum(log(l)))
}
log.likelihood(c(0.0001,2))
Sol3=nlminb(c(0.0001,2),log.likelihood, hessian = TRUE)
Sol3 #Code debe dar 1 o 2
betaHat3=Sol$par[1]
betaHat3=Sol3$par[1]
lambdaHat3=Sol3$par[2]
##### Acelerating Life Testing with Weibull distribution #####
#### Tempreature 150 ˚C (Complete data) ####
data3=c(420,650,703,838,1086,1125,1378,1673,1896,2037)
n3=length(data3)
log.likelihood3= function(tetha){
beta=tetha[1]
lambda=tetha[2]
l=dweibull(data3,beta,1/lambda)
return(-sum(log(l)))
}
log.likelihood(c(0.0001,2))
Sol3=nlminb(c(0.0001,2),log.likelihood3, hessian = TRUE)
Sol3 #Code debe dar 1 o 2
betaHat3=Sol3$par[1]
lambdaHat3=Sol3$par[2]
#### Tempreature 120 ˚C (Censored data) ####
data2=c(1121,1572,2329,2573,2702,3702,4277)
r=length(data)
C2=4500
n=8
log.likelihood2= function(tetha){
beta=tetha[1]
lambda=tetha[2]
l=dweibull(data2,beta,1/lambda)
l[(r+1):n]=pweibull(C2,beta,1/lambda, lower.tail = FALSE)
return(-sum(log(l)))
}
Sol2=nlminb(c(0.0001,2),log.likelihood2, hessian = TRUE)
Sol2 #Code debe dar 1 o 2
betaHat2=Sol$par[1]
lambdaHat2=Sol$par[2]
betaHat2=Sol2$par[1]
lambdaHat2=Sol2$par[2]
Sol2=nlminb(c(2,0.0001),log.likelihood2, hessian = TRUE)
Sol2 #Code debe dar 1 o 2
betaHat2=Sol2$par[1]
lambdaHat2=Sol2$par[2]
data3=c(420,650,703,838,1086,1125,1378,1673,1896,2037)
n3=length(data3)
log.likelihood3= function(tetha){
beta=tetha[1]
lambda=tetha[2]
l=dweibull(data3,beta,1/lambda)
return(-sum(log(l)))
}
log.likelihood(c(0.0001,2))
Sol3=nlminb(c(0.0001,2),log.likelihood3, hessian = TRUE)
Sol3 #Code debe dar 1 o 2
betaHat3=Sol3$par[1]
lambdaHat3=Sol3$par[2]
data2=c(1121,1572,2329,2573,2702,3702,4277)
r2=length(data2)
C2=4500
n2=8
log.likelihood2= function(tetha){
beta=tetha[1]
lambda=tetha[2]
l=dweibull(data2,beta,1/lambda)
l[(r2+1):n2]=pweibull(C2,beta,1/lambda, lower.tail = FALSE)
return(-sum(log(l)))
}
Sol2=nlminb(c(2,0.0001),log.likelihood2, hessian = TRUE)
Sol2 #Code debe dar 1 o 2
betaHat2=Sol2$par[1]
lambdaHat2=Sol2$par[2]
data1=c(1638, 1944, 2764, 2846, 3546, 4803, 5139, 5446)
r1=length(data1)
C1=5500
n1=8
log.likelihood1= function(tetha){
beta=tetha[1]
lambda=tetha[2]
l=dweibull(data1,beta,1/lambda)
l[(r1+1):n1]=pweibull(C1,beta,1/lambda, lower.tail = FALSE)
return(-sum(log(l)))
}
Sol1=nlminb(c(2,0.0001),log.likelihood2, hessian = TRUE)
Sol1 #Code debe dar 1 o 2
betaHat1=Sol1$par[1]
lambdaHat1=Sol1$par[2]
data1=c(1638, 1944, 2764, 2846, 3546, 4803, 5139, 5446)
r1=length(data1)
C1=5500
n1=8
log.likelihood1= function(tetha){
beta=tetha[1]
lambda=tetha[2]
l=dweibull(data1,beta,1/lambda)
l[(r1+1):n1]=pweibull(C1,beta,1/lambda, lower.tail = FALSE)
return(-sum(log(l)))
}
Sol1=nlminb(c(2,0.0001),log.likelihood1, hessian = TRUE)
Sol1 #Code debe dar 1 o 2
betaHat1=Sol1$par[1]
lambdaHat1=Sol1$par[2]
#### Tempreature 150 ˚C (Complete data) ####
data3=c(420,650,703,838,1086,1125,1378,1673,1896,2037)
n3=length(data3)
log.likelihood3= function(tetha){
beta=tetha[1]
lambda=tetha[2]
l=dweibull(data3,beta,1/lambda)
return(-sum(log(l)))
}
Sol3=nlminb(c(0.0001,2),log.likelihood3, hessian = TRUE)
Sol3 #Code debe dar 1 o 2
betaHat3=Sol3$par[1]
lambdaHat3=Sol3$par[2]
#### Tempreature 120 ˚C (Censored data) ####
data2=c(1121,1572,2329,2573,2702,3702,4277)
r2=length(data2)
C2=4500
n2=8
log.likelihood2= function(tetha){
beta=tetha[1]
lambda=tetha[2]
l=dweibull(data2,beta,1/lambda)
l[(r2+1):n2]=pweibull(C2,beta,1/lambda, lower.tail = FALSE)
return(-sum(log(l)))
}
Sol2=nlminb(c(2,0.0001),log.likelihood2, hessian = TRUE)
Sol2 #Code debe dar 1 o 2
betaHat2=Sol2$par[1]
lambdaHat2=Sol2$par[2]
#### Tempreature 100 ˚C (Censored data) ####
data1=c(1638, 1944, 2764, 2846, 3546, 4803, 5139, 5446)
r1=length(data1)
C1=5500
n1=8
log.likelihood1= function(tetha){
beta=tetha[1]
lambda=tetha[2]
l=dweibull(data1,beta,1/lambda)
l[(r1+1):n1]=pweibull(C1,beta,1/lambda, lower.tail = FALSE)
return(-sum(log(l)))
}
Sol1=nlminb(c(2,0.0001),log.likelihood1, hessian = TRUE)
Sol1 #Code debe dar 1 o 2
betaHat1=Sol1$par[1]
lambdaHat1=Sol1$par[2]
1/(9.672175*10^-5)
exp(1)
150*7.16
data1=c(1770,2448,3230,3445,3538,5809,6590,6744)
data2=c(1090,1907,2147,2645,2903,3357,4135,4381)
data3=c(630,848,1121,1307,1321,1357,1984,2331)
S0=50
S1=80
S2=100
S3=120
n1=length(data1)
n2=length(data2)
n3=length(data3)
log.likelihood= function(theta){
b0=theta[1]
b1=theta[2]
l=n1*(b0+b1*S1)-exp(b0+b1*S1)*sum(data1)+n2*(b0+b1*S1)-exp(b0+b1*S2)*sum(data2)+n3*(b0+b1*S3)-exp(b0+b1*S3)*sum(data3)
return(-l)
}
Sol=nlminb(c(0.0001,2),log.likelihood, hessian = TRUE)
Sol #Code debe dar 1 o 2
betaHat=Sol$par[1]
lambdaHat=Sol$par[2]
Sol=nlminb(c(1,2),log.likelihood, hessian = TRUE)
Sol #Code debe dar 1 o 2
Sol=nlm(c(1,2),log.likelihood, hessian = TRUE)
Sol=nlm(log.likelihood,c(1,2), hessian = TRUE)
Sol #Code debe dar 1 o 2
Sol=nlm(log.likelihood,c(0.5,0.05), hessian = TRUE)
Sol #Code debe dar 1 o 2
log.likelihood= function(theta){
b0=theta[1]
b1=theta[2]
l=n1*log(b0+b1*S1)-exp(b0+b1*S1)*sum(data1)+n2*log(b0+b1*S1)-exp(b0+b1*S2)*sum(data2)+n3*log(b0+b1*S3)-exp(b0+b1*S3)*sum(data3)
return(-l)
}
Sol=nlm(log.likelihood,c(0.5,0.05), hessian = TRUE)
Sol #Code debe dar 1 o 2
log.likelihood= function(theta){
b0=theta[1]
b1=theta[2]
l=n1*(b0+b1*S1)-exp(b0+b1*S1)*sum(data1)+n2*(b0+b1*S1)-exp(b0+b1*S2)*sum(data2)+n3*(b0+b1*S3)-exp(b0+b1*S3)*sum(data3)
return(-l)
}
Sol=nlm(log.likelihood,c(0.5,0.05), hessian = TRUE)
Sol #Code debe dar 1 o 2
sum(data1)
log.likelihood= function(theta){
b0=theta[1]
b1=theta[2]
l=n1*(b0+b1*S1)-exp(b0+b1*S1)*sum(data1)+n2*(b0+b1*S2)-exp(b0+b1*S2)*sum(data2)+n3*(b0+b1*S3)-exp(b0+b1*S3)*sum(data3)
return(-l)
}
Sol=nlm(log.likelihood,c(0.5,0.05), hessian = TRUE)
Sol #Code debe dar 1 o 2
log.likelihood(c(1,1))

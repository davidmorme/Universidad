modelo11<-lm(Parcial_Final.Y~(A+B+C)^3,data = dis_fac)
summary(modelo11)
summary(modelo1)
Parcial_Final <- read_excel("C:/Users/DAVID MORA MEZA/Desktop/Parcial_Final.xlsx")
modelo1<-lm(Y~(A+B+C)^3,data = Parcial_Final)
summary(modelo1)
ggplot(data = Parcial_Final, mapping = aes(x = A, y = Y, colour = B)) +
geom_boxplot() +
theme_bw() +
theme(legend.position = "none")
ggplot(data = Parcial_Final, mapping = aes(x = A, y = Y, colour = A)) +
geom_boxplot() +
theme_bw() +
theme(legend.position = "none")
ggplot(data = Parcial_Final, mapping = aes(x = A, y = Y, colour = A)) +
geom_boxplot() +
theme_bw()
ggplot(data = Parcial_Final, aes(x = A, y = Y, color = A)) +
geom_boxplot() +
theme_bw()+labs(x = "Tipo de Paciente",y = "Tiempo")
Parcial_Final <- read_excel("C:/Users/DAVID MORA MEZA/Desktop/Parcial_Final.xlsx",
col_types = x("Number","text","text","text","Number"))
Parcial_Final <- read_excel("C:/Users/DAVID MORA MEZA/Desktop/Parcial_Final.xlsx",
col_types = c("Number","text","text","text","Number"))
Parcial_Final <- read_excel("C:/Users/DAVID MORA MEZA/Desktop/Parcial_Final.xlsx",
col_types = c("numeric","text","text","text","numeric"))
ggplot(data = Parcial_Final, aes(x = A, y = Y, color = A)) +
geom_boxplot() +
theme_bw()+labs(x = "Tipo de Paciente",y = "Tiempo")
modelo1<-lm(Y~(A+B+C)^3,data = Parcial_Final)
summary(modelo1)
ggplot(data = Parcial_Final, aes(x = A, y = Y, color = B)) +
geom_boxplot() +
theme_bw()+labs(x = "Tipo de Paciente",y = "Tiempo")
ggplot(data = Parcial_Final, aes(x = A, y = Y, color = B)) +
geom_boxplot() +
theme_bw()+labs(x = "Tipo de Paciente",y = "Tiempo")+ facet_wrap(~B, scales = "fixed")
ggplot(data = Parcial_Final, aes(x = A, y = Y, color = B)) +
geom_boxplot() +
theme_bw()+labs(x = "Tipo de Paciente",y = "Tiempo")+ facet_wrap(~C, scales = "fixed")
ggplot(data = Parcial_Final, aes(x = A, y = Y, color = B)) +
geom_boxplot() +
theme_bw()+labs(x = "Viscosidad",y = "Proporción de piezas defectuosas")+ facet_wrap(~C, scales = "fixed")
y=Parcial_Final$Y
dis_fac<-FrF2(nruns = 8,nfactors = 3,
factor.names = list(A=c(-1,1),B=c(-1,1),C=c(-1,1))
,replications = 2,randomize = FALSE)
dis_fac<-add.response(design = dis_fac,response = Y)
Y=Parcial_Final$Y
dis_fac<-add.response(design = dis_fac,response = Y)
dis_fac
modelo1<-lm(Y~(A+B+C)^3,data = dis_fac)
summary(modelo1)
modelo2<-lm(Y~(A+C)^2,data = dis_fac)
summary(modelo2)
AIC(modelo1,modelo2)
?step
step(modelo1)
step(modelo1)
step(modelo2)
modelo2=lm(formula = Y ~ A + B + C + A:B + A:C, data = dis_fac)
summary(modelo2)
summary(modelo1)
summary(modelo2)
modelo2<-lm(Y~(A+C)^2,data = dis_fac)
summary(modelo2)
Y<-c(29, 20, 22, 16, 43, 51, 39, 49,
24, 21, 25, 19, 45, 49, 40, 48,
30, 24, 20, 18, 40, 52, 37, 50)
dis_fac<-FrF2(nruns = 8,nfactors = 3,
factor.names = list(A=c(-1,1),B=c(-1,1),C=c(-1,1))
,replications = 3,randomize = FALSE)
dis_fac<-add.response(design = dis_fac,response = Y)
dis_fac
modelo1<-lm(Y~(A+B+C)^3,data = dis_fac)
summary(modelo1)
step(modelo1)
Parcial_Final <- read_excel("C:/Users/DAVID MORA MEZA/Desktop/Parcial_Final.xlsx",
col_types = c("numeric","text","text","text","numeric"))
Y=Parcial_Final$Y
dis_fac<-FrF2(nruns = 8,nfactors = 3,
factor.names = list(A=c(-1,1),B=c(-1,1),C=c(-1,1))
,replications = 2,randomize = FALSE)
dis_fac<-add.response(design = dis_fac,response = Y)
dis_fac
modelo1<-lm(Y~(A+B+C)^3,data = dis_fac)
summary(modelo1)
step(modelo1)
modelo2=lm(formula = Y ~ A + B + C + A:B + A:C, data = dis_fac)
summary(modelo2)
modelo3<-lm(Y~(A+C)^2,data = dis_fac)
summary(modelo3)
AIC(modelo1,modelo2,modelo3)
?step(modelo1)
?AIC(modelo1,modelo2,modelo3)
AIC(modelo2,modelo3)
## Normalidad
qqnorm(residuals(modelo2))
qqline(residuals(modelo2),col="red")
shapiro.test(residuals(modelo2))
lillie.test(residuals(modelo2))
library(tseries)
ad.test(residuals(modelo2))
library(tseries)
jarque.bera.test(residuals(modelo2))
shapiro.test(residuals(modelo2))
shapiro.test(residuals(modelo2))
ad.test(residuals(modelo2))
jarque.bera.test(residuals(modelo2))
ggplot(data = modelo2, aes(x = c(1:length(Y)), y = modelo2$residuals)) +
geom_point() +
labs(x = "Observación",y = "Residuo")+
theme_bw()
# Test de Durbin Watson
dwtest(modelo2)
#Test Breush Pagan
bptest(modelo2)
summary(modelo2)
ggplot(data = dis_fac, aes(x = A, y = Y, colour = C,
group = C)) +
stat_summary(fun=mean, geom = "point") +
stat_summary(fun=mean, geom = "line") +
labs(y = "efecto contaminación", x="Extracto") +
theme_bw()+ facet_wrap(~B, scales = "fixed")
ggplot(data = dis_fac, aes(x = A, y = Y, colour = C,
group = "Holi")) +
stat_summary(fun=mean, geom = "point") +
stat_summary(fun=mean, geom = "line") +
labs(y = "Proporción de piezas defectuosas", x="Viscosidad") +
theme_bw()+ facet_wrap(~B, scales = "fixed")
ggplot(data = dis_fac, aes(x = A, y = Y, colour = C,
group = C)) +
stat_summary(fun=mean, geom = "point") +
stat_summary(fun=mean, geom = "line") +
labs(y = "Proporción de piezas defectuosas", x="Viscosidad") +
theme_bw()+ facet_wrap(~B, scales = "fixed")
ggplot(data = dis_fac, aes(x = A, y = Y, colour = C)) +
stat_summary(fun=mean, geom = "point") +
stat_summary(fun=mean, geom = "line") +
labs(y = "Proporción de piezas defectuosas", x="Viscosidad") +
theme_bw()+ facet_wrap(~B, scales = "fixed")
ggplot(data = dis_fac, aes(x = A, y = Y, colour = C,
group = C)) +
stat_summary(fun=mean, geom = "point") +
stat_summary(fun=mean, geom = "line") +
labs(y = "Proporción de piezas defectuosas", x="Viscosidad") +
theme_bw()+ facet_wrap(~B, scales = "fixed")
ggplot(data = dis_fac, aes(x = A, y = Y, colour = C,
group = C)) +
stat_summary(fun=mean, geom = "point") +
stat_summary(fun=mean, geom = "line") +
labs(y = "Proporción de piezas defectuosas", x="Viscosidad") +
theme_bw()+ facet_wrap(~B, scales = "fixed")+
ggtitle("Gráfico de interacción del factor de Viscosidad y Temperatura del proceso, de acuerdo con la velociad del rotor")
ggplot(data = dis_fac, aes(x = A, y = Y, colour = C,
group = C)) +
stat_summary(fun=mean, geom = "point") +
stat_summary(fun=mean, geom = "line") +
labs(y = "Proporción de piezas defectuosas", x="Viscosidad") +
theme_bw()+ facet_wrap(~B, scales = "fixed")+
ggtitle("Gráfico de interacción del factor de Viscosidad y Temperatura del proceso (c), de acuerdo con la velociad del rotor")
round(predict(modelo2, data.frame(A=1,B=1,C=-1), interval = "confidence",level = 0.95),3)
min(round(predict(modelo2,level = 0.95),3))
round(predict(modelo2,level = 0.95),3)
dis_fac
round(predict(modelo2,level = 0.95,interval = "confidence"),3)
calcula_muestra<-function(alfa,varX,E,N)
{
z<-round(qnorm(1-(alfa/2)),digits=2)
numerador <- (z^2)*(N)*(varX)
denominador <- ((N-1)*(E^2))+((z^2)*(varX))
n<-round(numerador/denominador,digits=0)
print(n)
}
calcula_muestra(0.05,19.2,1,200)
power.t.test(sig.level = 0.05,power = .95,delta = 0.5,type = "one.sample")
?power.t.test(sig.level = 0.05,power = .95,delta = 0.5,type = "one.sample")
power.t.test(n = 20, delta = 1)
power.t.test(n = 200, delta = 1)
pwr.anova.test(k=5,n=25,f=0.10,sig.level=.05)
library(pwr)
pwr.anova.test(k=5,n=25,f=0.10,sig.level=.05)
?pwr.anova.test(k=5,n=25,f=0.10,sig.level=.05)
pwr.anova.test(k=4,n=550,f=0.01,sig.level=.05)
pwr.anova.test(k=4,n=550,f=0.1,sig.level=.05)
pwr.anova.test(k=4,n=10,f=0.1,sig.level=.05)
source("C:/Users/DAVID MORA MEZA/OneDrive - Universidad de la Sabana/Sistema de Urgencias/ArchivosR/TratamientoEscenarios.R", echo=TRUE)
###### An?lisis de cantidad de r?plicas #####
by(ConsTimeT3$Minutos,list(ConsTimeT3$Replica,ConsTimeT3$Covid),sd)
###### An?lisis de cantidad de r?plicas #####
by(ConsTimeT3$Minutos,list(ConsTimeT3$Covid),sd)
pwr.anova.test(k=4,n=550,f=(5/69),sig.level=.05)
pwr.anova.test(k=4,n=550,f=(5/38),sig.level=.05)
pwr.anova.test(k=4,n=550,f=(5/16),sig.level=.05)
pwr.anova.test(k=4,n=550,f=(5/10),sig.level=.05)
by(ConsTimeT3$Minutos,list(ConsTimeT2$Covid),sd)
by(ConsTimeT4$Minutos,list(ConsTimeT2$Covid),sd)
by(ConsTimeT2$Minutos,list(ConsTimeT2$Covid),sd)
by(ConsTimeR$Minutos,list(ConsTimeR$Covid),sd)
by(ConsTimeR$Minutos,list(ConsTimeR$Covid),min)
by(ConsTimeR$Minutos,list(ConsTimeR$Covid),count)
by(ConsTimeR$Minutos,list(ConsTimeR$Covid),lenght)
by(ConsTimeR$Minutos,list(ConsTimeR$Covid),length)
min(by(ConsTimeR$Minutos,list(ConsTimeR$Covid),length))
SummarySd=by(ConsTimeR$Minutos,list(ConsTimeR$Covid),sd)
MinMuestra=min(by(ConsTimeR$Minutos,list(ConsTimeR$Covid),length))
pwr.anova.test(k=4,n=MinMuestra,f=(5/SummarySd[1]),sig.level=.05)
pwr.anova.test(k=4,n=MinMuestra,f=(5/SummarySd[2]),sig.level=.05)
pwr.anova.test(k=4,n=MinMuestra,f=(5/SummarySd[3]),sig.level=.05)
pwr.anova.test(k=4,n=MinMuestra,f=(5/SummarySd[4]),sig.level=.05)
SummarySd=by(ConsTimeT2$Minutos,list(ConsTimeT2$Covid),sd)
MinMuestra=min(by(ConsTimeR$Minutos,list(ConsTimeR$Covid),length))
pwr.anova.test(k=4,n=MinMuestra,f=(5/SummarySd[1]),sig.level=.05)
pwr.anova.test(k=4,n=MinMuestra,f=(5/SummarySd[2]),sig.level=.05)
pwr.anova.test(k=4,n=MinMuestra,f=(5/SummarySd[3]),sig.level=.05)
pwr.anova.test(k=4,n=MinMuestra,f=(5/SummarySd[4]),sig.level=.05)
SummarySd=by(ConsTimeT3$Minutos,list(ConsTimeT3$Covid),sd)
MinMuestra=min(by(ConsTimeR$Minutos,list(ConsTimeR$Covid),length))
pwr.anova.test(k=4,n=MinMuestra,f=(5/SummarySd[1]),sig.level=.05)
pwr.anova.test(k=4,n=MinMuestra,f=(5/SummarySd[2]),sig.level=.05)
pwr.anova.test(k=4,n=MinMuestra,f=(5/SummarySd[3]),sig.level=.05)
pwr.anova.test(k=4,n=MinMuestra,f=(5/SummarySd[4]),sig.level=.05)
SummarySd[1]
SummarySd[2]
?kruskal.test()
library(readxl)
library(ggplot2)
library(dplyr)
library(ggstatsplot)
ggbetweenstats(
data  = ConsTimeR,
x     = Covid,
type = "nonparametric",
y     = Minutos, xlab="% COVID", ylab="Minutes",
title = "Time of first attention to Respiratory Patient for each scenario")+
theme(plot.title = element_text(color="black", size=20, hjust = 0.5))
ggbetweenstats(
data  = ConsTimeR,
x     = Covid,
type = "nonparametric",
y     = Minutos, xlab="% COVID", ylab="Minutes",
title = "Time of first attention to Respiratory Patient for each scenario")+
theme(plot.title = element_text(color="black", size=20, hjust = 0.5))+
theme_bw()
ggbetweenstats(
data  = ConsTimeR,
x     = Covid,
type = "nonparametric",
y     = Minutos, xlab="% COVID", ylab="Minutes",
title = "Time of first attention to Respiratory Patient for each scenario")+
theme(plot.title = element_text(color="black", size=20, hjust = 0.5))+
theme_gray()
ggbetweenstats(
data  = ConsTimeT2,
x     = Covid,
type = "nonparametric",
y     = Minutos, xlab="% COVID", ylab="Minutes",
title = "Time of first attention to Patient Triage 2 for each scenario")+
theme(plot.title = element_text(color="black", size=20, hjust = 0.5))+
theme_gray()
ggbetweenstats(
data  = ConsTimeT3,
x     = Covid,
type = "nonparametric",
y     = Minutos, xlab="% COVID", ylab="Minutes",
title = "Time of first attention to Patient Triage 3 for each scenario")+
theme(plot.title = element_text(color="black", size=20, hjust = 0.5))+
theme_gray()
source("C:/Users/DAVID MORA MEZA/OneDrive - Universidad de la Sabana/Sistema de Urgencias/ArchivosR/TratamientoEscenarios.R", echo=TRUE)
ggbetweenstats(
data  = ConsTimeR,
x     = Covid,
type = "nonparametric",
y     = Minutos, xlab="% COVID", ylab="Minutes",
title = "Time of first attention to Respiratory Patient for each scenario")+
theme(plot.title = element_text(color="black", size=20, hjust = 0.5))+
theme_gray()
library(readxl)
library(ggplot2)
library(dplyr)
library(ggstatsplot)
ggbetweenstats(
data  = ConsTimeR,
x     = Covid,
type = "nonparametric",
y     = Minutos, xlab="% COVID", ylab="Minutes",
title = "Time of first attention to Respiratory Patient for each scenario")+
theme(plot.title = element_text(color="black", size=20, hjust = 0.5))+
theme_gray()
ggbetweenstats(
data  = ConsTimeR,
x     = Covid,
type = "nonparametric",
y     = Minutos, xlab="% COVID", ylab="Minutes",
title = "Time of first attention to Respiratory Patient for each scenario")+
theme(plot.title = element_text(color="black", size=20, hjust = 0))+
theme_gray()
ggbetweenstats(
data  = ConsTimeT2,
x     = Covid,
type = "nonparametric",
y     = Minutos, xlab="% COVID", ylab="Minutes",
title = "Time of first attention to Patient Triage 2 for each scenario")+
theme(plot.title = element_text(color="black", size=20, hjust = 0.5))+
theme_gray()
ggbetweenstats(
data  = ConsTimeT3,
x     = Covid,
type = "nonparametric",
y     = Minutos, xlab="% COVID", ylab="Minutes",
title = "Time of first attention to Patient Triage 3 for each scenario")+
theme(plot.title = element_text(color="black", size=20, hjust = 0.5))+
theme_gray()
source("C:/Users/DAVID MORA MEZA/OneDrive - Universidad de la Sabana/Sistema de Urgencias/ArchivosR/TratamientoEscenarios.R", echo=TRUE)
ggbetweenstats(
data  = ConsTimeR,
x     = Covid,
type = "nonparametric",
y     = Minutos, xlab="% of respitarory patients in the ED", ylab="Minutes",
title = "Time of first attention to Respiratory Patient for each scenario")+
theme(plot.title = element_text(color="black", size=20, hjust = 0))+
theme_gray()
ggbetweenstats(
data  = ConsTimeT2,
x     = Covid,
type = "nonparametric",
y     = Minutos, xlab="% of respitarory patients in the ED", ylab="Minutes",
title = "Time of first attention to Patient Triage 2 for each scenario")+
theme(plot.title = element_text(color="black", size=20, hjust = 0.5))+
theme_gray()
library(readxl)
library(ggplot2)
library(dplyr)
library(ggstatsplot)
ggbetweenstats(
data  = ConsTimeR,
x     = Covid,
type = "nonparametric",
y     = Minutos, xlab="% of respitarory patients in the ED", ylab="Minutes",
title = "Time of first attention to Respiratory Patient for each scenario")+
theme(plot.title = element_text(color="black", size=20, hjust = 0))+
theme_gray()
ggbetweenstats(
data  = ConsTimeT2,
x     = Covid,
type = "nonparametric",
y     = Minutos, xlab="% of respitarory patients in the ED", ylab="Minutes",
title = "Time of first attention to Patient Triage 2 for each scenario")+
theme(plot.title = element_text(color="black", size=20, hjust = 0.5))+
theme_gray()
ggbetweenstats(
data  = ConsTimeT3,
x     = Covid,
type = "nonparametric",
y     = Minutos, xlab="% of respitarory patients in the ED", ylab="Minutes",
title = "Time of first attention to Patient Triage 3 for each scenario")+
theme(plot.title = element_text(color="black", size=20, hjust = 0.5))+
theme_gray()
ggbetweenstats(
data  = ConsTimeR,
x     = Covid,
type = "nonparametric",
y     = Minutos, xlab="% of respitarory patients in the ED", ylab="Minutes",
title = "Time of first assessment to Respiratory Patient for each scenario")+
theme(plot.title = element_text(color="black", size=20, hjust = 0))+
theme_gray()
?wilcox.test()
?kruskal.test(ConsTime, Paciente)
kruskal.test(ConsTime, Paciente)
ConsTime
kruskal.test(ConsTime~Paciente)
kruskal.test(data=ConsTime,Minutos~Paciente)
prop.test(x = c(490, 400), n = c(500, 500))
prop.test(x = c(410, 400), n = c(500, 500))
prop.test(x = c(410, 400, 390), n = c(500, 500, 500))
#0.25
prop.test(x = c(0, 0, 0, 0, 0), n = c(44, 44, 44, 44, 44))
#0.25
prop.test(x = c(1, 1, 1, 1, 1), n = c(44, 44, 44, 44, 44))
#1
prop.test(x = c(1, 2, 0, 1, 1), n = c(44, 44, 44, 44, 44))
#1
prop.test(x = c(1, 3, 0, 1, 1), n = c(44, 44, 44, 44, 44))
#1.5
prop.test(x = c(4, 3, 1, 1, 1), n = c(44, 44, 44, 44, 44))
#2
prop.test(x = c(6, 7, 2, 7, 14), n = c(44, 44, 44, 44, 44))
#3
prop.test(x = c(15, 14, 7, 15, 15), n = c(44, 44, 44, 44, 44))
?prop.test(x = c(410, 400, 390), n = c(500, 500, 500))
smokers  <- c( 83, 90, 129, 70 )
patients <- c( 86, 93, 136, 82 )
prop.test(smokers, patients)
#1
res1=prop.test(x = c(1, 3, 0, 1, 1), n = c(44, 44, 44, 44, 44))
res1$conf.int
res1$estimate
sd(res1$estimate)
sd(res1$estimate)/mean(res1$estimate)
#1.5
res2=prop.test(x = c(4, 3, 1, 1, 1), n = c(44, 44, 44, 44, 44))
sd(res2$estimate)/mean(res2$estimate)
mean(res1$estimate)
prop.test(x=1,n=44,p=0)
prop.test(x=1,n=44,p=0.01)
#1
prop.test(x = c(1, 3, 0, 1, 1), n = c(44, 44, 44, 44, 44),p=0.01)
prop.test(x = c(1, 3, 0, 1, 1), n = c(44, 44, 44, 44, 44), p=c(0.05,0.05,0.05,0.05,0.05))
#1
prop.test(x = c(1, 3, 0, 1, 1), n = c(44, 44, 44, 44, 44))
shapiro.test(res2$estimate)
estados <- c('3', '4','5', '6','7', '8','9', '10') # espacio de estados
mu0 <- c(0.125, 0.125,0.125,0.125,0.125,0.125,0.125,0.125) # distribución inicial
names(mu0) <- estados
P <- rbind(c(0.08,	0,	0,	0,	0,	0,	0,	0.92), c(0.12,	0.08,	0,	0,	0,	0,	0,	0.8),c(0.16,	0.12,	0.08,	0,	0,	0,	0,	0.64),c(0.21,	0.16,	0.12,	0.08,	0,	0,	0,	0.43),c(0.14,	0.21,	0.16,	0.12,	0.08,	0,	0,	0.29),c(0.09,	0.14,	0.21,	0.16,	0.12,	0.08,	0,	0.2),c(0.06,	0.09,	0.14,	0.21,	0.16,	0.12,	0.08,	0.14),c(0.14,	0.06,	0.09,	0.14,	0.21,	0.16,	0.12,	0.08)) # matriz de transici´on
dimnames(P) <- list(estados, estados)
P
(func.inic <- cumsum(mu0)) # funci´on de iniciación
?cumsum
source("C:/Users/DAVID MORA MEZA/OneDrive - Universidad de la Sabana/Sistema de Urgencias/ArchivosR/TratamientoEscenarios.R", echo=TRUE)
ggbetweenstats(
data  = ConsTimeR,
x     = Covid,
type = "nonparametric",
y     = Minutos, xlab="% of respitarory patients in the ED", ylab="Minutes",
title = "Time of first assessment to Respiratory Patient for each scenario")+
theme(plot.title = element_text(color="black", size=20, hjust = 0))+
theme_gray()
library(readxl)
library(ggplot2)
library(dplyr)
library(ggstatsplot)
ggbetweenstats(
data  = ConsTimeR,
x     = Covid,
type = "nonparametric",
y     = Minutos, xlab="% of respitarory patients in the ED", ylab="Minutes",
title = "Time of first assessment to Respiratory Patient for each scenario")+
theme(plot.title = element_text(color="black", size=20, hjust = 0))+
theme_gray()
ggbetweenstats(
data  = ConsTimeT2,
x     = Covid,
type = "nonparametric",
y     = Minutos, xlab="% of respitarory patients in the ED", ylab="Minutes",
title = "Time of first assessment to Patient Triage 2 for each scenario")+
theme(plot.title = element_text(color="black", size=20, hjust = 0.5))+
theme_gray()
ggbetweenstats(
data  = ConsTimeT3,
x     = Covid,
type = "nonparametric",
y     = Minutos, xlab="% of respitarory patients in the ED", ylab="Minutes",
title = "Time of first assessment to Patient Triage 3 for each scenario")+
theme(plot.title = element_text(color="black", size=20, hjust = 0.5))+
theme_gray()
pdf("Image1",         # Nombre del archivo
width = 8, height = 7) # Ancho y alto en pulgadas
ggbetweenstats(
data  = ConsTimeR,
x     = Covid,
type = "nonparametric",
y     = Minutos, xlab="% of respitarory patients in the ED", ylab="Minutes",
title = "Time of first assessment to Respiratory Patient for each scenario")+
theme(plot.title = element_text(color="black", size=20, hjust = 0))+
theme_gray()
de.off()
dev.off()
pdf("Image1",         # Nombre del archivo
width = 7, height = 14) # Ancho y alto en pulgadas
ggbetweenstats(
data  = ConsTimeR,
x     = Covid,
type = "nonparametric",
y     = Minutos, xlab="% of respitarory patients in the ED", ylab="Minutes",
title = "Time of first assessment to Respiratory Patient for each scenario")+
theme(plot.title = element_text(color="black", size=20, hjust = 0))+
theme_gray()
dev.off()
pdf("Image1.pdf",         # Nombre del archivo
width = 14, height = 7) # Ancho y alto en pulgadas
ggbetweenstats(
data  = ConsTimeR,
x     = Covid,
type = "nonparametric",
y     = Minutos, xlab="% of respitarory patients in the ED", ylab="Minutes",
title = "Time of first assessment to Respiratory Patient for each scenario")+
theme(plot.title = element_text(color="black", size=20, hjust = 0))+
theme_gray()
dev.off()
pdf("Image2.pdf",         # Nombre del archivo
width = 14, height = 7) # Ancho y alto en pulgadas
ggbetweenstats(
data  = ConsTimeT2,
x     = Covid,
type = "nonparametric",
y     = Minutos, xlab="% of respitarory patients in the ED", ylab="Minutes",
title = "Time of first assessment to Patient Triage 2 for each scenario")+
theme(plot.title = element_text(color="black", size=20, hjust = 0.5))+
theme_gray()
dev.off()
pdf("Image3.pdf",         # Nombre del archivo
width = 14, height = 7) # Ancho y alto en pulgadas
ggbetweenstats(
data  = ConsTimeT3,
x     = Covid,
type = "nonparametric",
y     = Minutos, xlab="% of respitarory patients in the ED", ylab="Minutes",
title = "Time of first assessment to Patient Triage 3 for each scenario")+
theme(plot.title = element_text(color="black", size=20, hjust = 0.5))+
theme_gray()
dev.off()
